/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Immunization;

import daycareproject.Immunization;
import daycareproject.ImmunizationActivity;
import daycareproject.ImmunizationStudent;
import daycareproject.Person;
import daycareproject.School;
import daycareproject.Student;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Graphics;
import javax.swing.ImageIcon;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author wangy
 */
public class Handle extends javax.swing.JPanel {

    /**
     * Creates new form Handle
     */
  private School s;
    private JPanel container;
    private ImmunizationActivity ia;
    public Handle(JPanel  container, School s, ImmunizationActivity ia) {
        initComponents();
        this.container=container;
        this.s=s;
        this.ia=ia;
        populateTable();
    }
     public void populateTable()
{
     DefaultTableModel dtm= (DefaultTableModel)student.getModel();
    dtm.setRowCount(0);
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
    Calendar now = Calendar.getInstance();
    Calendar calendar = Calendar.getInstance();
     Object raw[]=new Object[2];
    try {
 if(ia.getImmunization().getDuration().equals("lifetime")){
         for(Person stu: s.getStudentlist())
     {
         int sym=0;
         Student ss=(Student)stu;
         for(ImmunizationStudent iss:ss.getActivity()){
             
            if(iss.getActivity().getImmunization()==ia.getImmunization()) {
                sym=1;
                break;
            }
            }
         if(sym==0){
             raw[0]=ss;
          dtm.addRow(raw);
         }
     }

    }
    else{
    
     for(Person stu: s.getStudentlist())
     {
          int sym=0;
         Student ss=(Student)stu;
         for(ImmunizationStudent iss:ss.getActivity()){
             
            if(iss.getActivity().getImmunization()==ia.getImmunization()) {

                calendar.setTime(sdf.parse(iss.getTime()));
                int year=now.get(Calendar.YEAR)-calendar.get(Calendar.YEAR);
                int month=now.get(Calendar.MONTH)-calendar.get(Calendar.MONTH);
                int exp=Integer.parseInt(ia.getImmunization().getDuration());
                if((year*12+month)<exp)
                { 
                    
                  sym=1;
                    
                break;
                }   
            }
         }
            if(sym==0){
             raw[0]=ss;
          dtm.addRow(raw);
         }
     }

    }

    
} catch (ParseException e) {
         e.printStackTrace();
}
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel(){
            protected void paintComponent(Graphics g){
                super.paintComponent(g);
                ImageIcon img=new ImageIcon(getClass().getResource("../../hospital.jpg"));
                g.drawImage(img.getImage(),0,0,getWidth(),getHeight(),null);
            }
        };
        jScrollPane2 = new javax.swing.JScrollPane();
        student = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        student.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Student Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(student);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Student List");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Handle");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(168, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(125, 125, 125))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(175, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
            container.remove(this);
        Component component[]=  container.getComponents();
        WorkingActivity MangaeP=(WorkingActivity)component[(component.length-1)];
        MangaeP.populateTable();
        CardLayout layout= (CardLayout)  container.getLayout();
        layout.previous( container);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         int selectRaw= student.getSelectedRow();
             SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
        if(selectRaw<0)
        JOptionPane.showMessageDialog(null, "Please select a raw from table", "Warning", JOptionPane.WARNING_MESSAGE);
        else{
    
       Student ss= (Student)student.getValueAt(selectRaw, 0);
       ss.addActivity(new ImmunizationStudent(ia, sdf.format(new Date())));
   JOptionPane.showMessageDialog(null, "Handle successfully!");
                populateTable();
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable student;
    // End of variables declaration//GEN-END:variables
}
